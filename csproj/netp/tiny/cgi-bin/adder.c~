/*
 * adder.c - a minimal CGI program that adds two numbers together
 */
/* $begin adder */
#include "csapp.h"

int main(void) {
    char *buf, *p;
    char arg1[MAXLINE], arg2[MAXLINE], content[MAXLINE];
    int n1=0, n2=0;

    /* Extract the two arguments passed in the url */

    // returning the value of the QUERY_STRING and save in buf
    if ((buf = getenv("QUERY_STRING")) != NULL) {
      p = strchr(buf, '&'); // returns a pointer to the ampersand which separates in the url between the two parameters
      *p = '\0'; // replace the ampersand with \0 which is the string terminating character breaking it up into two strings
      strcpy(arg1, buf); // copy from buff into arg1 variable
      strcpy(arg2, p+1); // p is pointing to the ampersand, so p+1 points to the beginning of the second arg after the imported terminating char, and copy the second arg into arg2

	// translated from ascii number in string and converting it  to integer
	n1 = atoi(arg1);
	n2 = atoi(arg2);
    }

    /* Make the response body */
    //sprintf() prints to a buffer instead of to the screen
    // way of generating a string with the entire response
    // aggregating response into a buffer called content
    // before printing it later (need to get length of entirety
    // of the content because needs to print before
    // in the header
    sprintf(content, "Welcome to Sarah's add.com: ");
    sprintf(content, "%sTHE Internet BASIC addition portal.\r\n<p>", content);
    sprintf(content, "%sThe TESHUVA is: %d + %d = %d\r\n<p>", 
	    content, n1, n2, n1 + n2);
    sprintf(content, "%sThanks for visiting!\r\n", content);
  
    /* Generate the HTTP response - which is just a bunch of print statements */

    // header of response - Going to be entirely different for our project. 
    printf("Connection: close\r\n");
    printf("Content-length: %d\r\n", (int)strlen(content));
    printf("Content-type: text/html\r\n\r\n");

    // body of response
    printf("%s", content); // printng the entirety of content to the screen
    fflush(stdout);

    exit(0);
}
/* $end adder */
